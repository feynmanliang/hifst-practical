#!/usr/bin/zsh

source 0-source-me.zsh
setopt noglob

SUNMAP=$DIR/wmaps/english.unmap

GRAMA=$DIR/rules/test30/A/
GRAMB=$DIR/rules/test30/B/
GRAMC=$DIR/rules/test30/C/


# Compare rulefiles B and C for sentence 27. How many rules do we have in each case? What
# differences do you observe in the rules?
print "Rules for 27 B:"
cat $DIR/rules/test30/B/r.27.gz | gunzip | wc -l

print "Rules for 27 C:"
cat $DIR/rules/test30/C/r.27.gz | gunzip | wc -l


# Align the 30 sentences towards their English reference with grammar C. Please make sure you
# do not omit the --towardsreference option. For how many input sentences can the
# reference be generated in this case? Are there references that can be generated by grammar B
# but NOT by C, and viceversa?
#hifst $DIR/configs/basic+params.features \
#  --textinput=$DIR/input/test30.spa.idx \
#  --rulefile=$GRAMC/r.?.gz \
#  --lm=$DIR/lm/test30.news-newscomm.eng.4g/G/?.G.gz --lmn=4 \
#  --range=1:30 \
#  --latoutputfst=output/example/LATS.C.towards_ref/?.fst.gz \
#  --towardsreference=$DIR/reference/test30/r.?.eng.idx
integer Bcnt=0
integer Ccnt=0
for i in {1..30}; do
  integer newB=$(printstrings -n 500000 -u -w --input=output/example/LATS.B.towards_ref/$i.fst.gz \
    2>/dev/null \
    | wc -l)
  integer newC=$(printstrings -n 500000 -u -w --input=output/example/LATS.C.towards_ref/$i.fst.gz \
    2>/dev/null \
    | wc -l)
  print "$i, $newB, $newC"
  Bcnt+=newB
  Ccnt+=newC
done
print "Bcnt: $Bcnt, Ccnt: $Ccnt"

# Take two sentences that can only be aligned by grammar C, and draw their 1-best derivation
# tree. Explain why the tree cannot be generated by grammar B, detailing which rule nesting
# cannot be performed. Justify your choice by comparing the ruleset files
# TODO:
