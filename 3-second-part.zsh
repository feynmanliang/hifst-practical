#!/usr/bin/zsh

source 0-source-me.zsh
setopt noglob

SUNMAP=$DIR/wmaps/english.unmap

GRAMA=$DIR/rules/test30/A/
GRAMB=$DIR/rules/test30/B/
GRAMC=$DIR/rules/test30/C/


# Compare rulefiles B and C for sentence 27. How many rules do we have in each case? What
# differences do you observe in the rules?
#print "Rules for 27 B:"
#cat $DIR/rules/test30/B/r.27.gz | gunzip | wc -l
#print "Rules for 27 C:"
#cat $DIR/rules/test30/C/r.27.gz | gunzip | wc -l
# Rules for 27 B:
# 321
# Rules for 27 C:
# 321


# Align the 30 sentences towards their English reference with grammar C. Please make sure you
# do not omit the --towardsreference option. For how many input sentences can the
# reference be generated in this case? Are there references that can be generated by grammar B
# but NOT by C, and viceversa?
#hifst $DIR/configs/basic+params.features \
#  --textinput=$DIR/input/test30.spa.idx \
#  --rulefile=$GRAMC/r.?.gz \
#  --lm=$DIR/lm/test30.news-newscomm.eng.4g/G/?.G.gz --lmn=4 \
#  --range=1:30 \
#  --latoutputfst=output/example/LATS.C.towards_ref/?.fst.gz \
#  --towardsreference=$DIR/reference/test30/r.?.eng.idx
#integer Bcnt=0
#integer Ccnt=0
#for i in {1..30}; do
#  integer newB=$(printstrings -n 500000 -u -w --input=output/example/LATS.B.towards_ref/$i.fst.gz \
#    2>/dev/null \
#    | sed '/[EMPTY]/d' \
#    | wc -l)
#  integer newC=$(printstrings -n 500000 -u -w --input=output/example/LATS.C.towards_ref/$i.fst.gz \
#    2>/dev/null \
#    | sed '/[EMPTY]/d' \
#    | wc -l)
#  print "$i, $newB, $newC"
#  Bcnt+=newB
#  Ccnt+=newC
#done
#print "Bcnt: $Bcnt, Ccnt: $Ccnt"
# 1, 8, 8
# 2, 0, 0
# 3, 0, 81096
# 4, 0, 0
# 5, 165, 165
# 6, 0, 0
# 7, 8586, 10368
# 8, 0, 0
# 9, 0, 500000
# 10, 122, 135
# 11, 0, 0
# 12, 84, 84
# 13, 51692, 63949
# 14, 83, 95
# 15, 0, 0
# 16, 0, 0
# 17, 0, 500000
# 18, 0, 0
# 19, 0, 0
# 20, 166, 192
# 21, 0, 0
# 22, 500000, 500000
# 23, 14030, 16366
# 24, 0, 0
# 25, 282, 363
# 26, 658, 705
# 27, 0, 28
# 28, 0, 0
# 29, 0, 0
# 30, 0, 0
# Bcnt: 575876, Ccnt: 1673554

# Take two sentences that can only be aligned by grammar C, and draw their 1-best derivation
# tree. Explain why the tree cannot be generated by grammar B, detailing which rule nesting
# cannot be performed. Justify your choice by comparing the ruleset files
# Sentences 9 and 27
printstrings -n 1 -u --input=output/example/LATS.C.towards_ref/3.fst.gz --output=3.C.dvn1
draw_tree.sh 3.C.dvn1 $DIR/rules/test30/C/r.3.gz output/tree.3.C.dvn1.jpg
printstrings -n 1 -u --input=output/example/LATS.C.towards_ref/27.fst.gz --output=27.C.dvn1
draw_tree.sh 27.C.dvn1 $DIR/rules/test30/C/r.27.gz output/tree.27.C.dvn1.jpg
